{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Strafe\\\\strafe frontend\\\\src\\\\components\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CartService from \"../services/CartService\";\nimport OrderService from \"../services/OrderService\";\nimport ProductService from \"../services/ProductService\";\nimport SimpleLoginSession from \"../SimpleLoginSession\";\nimport TableRow from \"../uicomponent/TableRow\";\nimport NavigationBar from \"./NavigationBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const [cartList, setcartList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  let count = 0;\n  const [product, setProduct] = useState({});\n  if (!SimpleLoginSession.isSignIn()) navigate('signIn');\n  const [user_id, setUserId] = useState(SimpleLoginSession.getUser().id);\n  useEffect(() => {\n    if (!SimpleLoginSession.isSignIn()) {\n      navigate('signIn');\n    } else {\n      setUserId(SimpleLoginSession.getUser().id);\n      console.log(SimpleLoginSession.getUser().id);\n\n      const fetchList = uID => {\n        setLoading(true);\n        CartService.getCartByUserId(uID).then(response => {\n          setcartList(response.data);\n          console.log(response.data);\n        }).catch(error => {\n          console.log(\"Cart Fetch Error\", error);\n        });\n        setLoading(false);\n      };\n\n      fetchList(user_id);\n    }\n  }, [user_id]);\n\n  const placeOrder = e => {\n    e.preventDefault();\n    const orderArray = [];\n\n    for (let i = 0; i < cartList.length; i++) {\n      const order = {\n        userId: cartList[i].userId,\n        productId: cartList[i].productId,\n        quantity: cartList[i].quantity\n      };\n      orderArray.push(order);\n    }\n\n    OrderService.addOrder(orderArray).then(response => {\n      console.log(response.data);\n\n      for (let i = 0; i < cartList.length; i++) {\n        console.log(cartList[i]);\n        getProduct(cartList[i].productId, cartList[i].quantity);\n        setProduct({ ...product,\n          ['quantity']: cartList[i].quantity\n        });\n        console.log(\"Place Order prod\" + count, product);\n        deleteCart(e, cartList[i].id);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getProduct = async productId => {\n    try {\n      const response = await ProductService.getProductById(productId);\n      setProduct(response.data);\n      console.log(\"Get Product\" + count, response.data);\n      count++;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateProduct = (product, productId) => {\n    ProductService.updateProduct(product, productId).then(response => {\n      console.log(\"Product Updated\" + count, response.data);\n      count++;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteCart = (e, cartId) => {\n    e.preventDefault();\n    CartService.deleteCart(cartId).then(response => {\n      if (cartList) {\n        setcartList(preventElement => {\n          return preventElement.filter(cart => cart.id != cartId);\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"productCartBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"firstItem\",\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: cartList.map(cart => /*#__PURE__*/_jsxDEV(TableRow, {\n              cart: cart,\n              deleteCart: deleteCart\n            }, cart.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderBtnDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => placeOrder(e),\n          className: \"orderBtn\",\n          id: \"placeOrderButton\",\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cart, \"mGFbSVhnBPqvum9sPKe5WY4ib2E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CartService","OrderService","ProductService","SimpleLoginSession","TableRow","NavigationBar","Cart","cartList","setcartList","loading","setLoading","navigate","count","product","setProduct","isSignIn","user_id","setUserId","getUser","id","console","log","fetchList","uID","getCartByUserId","then","response","data","catch","error","placeOrder","e","preventDefault","orderArray","i","length","order","userId","productId","quantity","push","addOrder","getProduct","deleteCart","getProductById","updateProduct","cartId","preventElement","filter","cart","map"],"sources":["C:/Users/ADMIN/Desktop/Strafe/strafe frontend/src/components/Cart.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CartService from \"../services/CartService\";\r\nimport OrderService from \"../services/OrderService\";\r\nimport ProductService from \"../services/ProductService\";\r\nimport SimpleLoginSession from \"../SimpleLoginSession\";\r\nimport TableRow from \"../uicomponent/TableRow\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst Cart = () => {\r\n  \r\n  const [cartList, setcartList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  let count = 0;\r\n\r\n  const [product, setProduct] = useState({});\r\n  if(!SimpleLoginSession.isSignIn())\r\n   navigate('signIn')\r\n\r\n  const [user_id, setUserId] = useState(SimpleLoginSession.getUser().id);\r\n\r\n  useEffect(() => {\r\n    if(!SimpleLoginSession.isSignIn())\r\n    {\r\n      navigate('signIn');\r\n    }else{\r\n      setUserId(SimpleLoginSession.getUser().id);\r\n      console.log(SimpleLoginSession.getUser().id);\r\n      const fetchList = (uID) => {\r\n        setLoading(true);\r\n        CartService.getCartByUserId(uID)\r\n          .then((response) => {\r\n            setcartList(response.data);\r\n            console.log(response.data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Cart Fetch Error\",error);\r\n          });\r\n        setLoading(false);\r\n      };\r\n      fetchList(user_id);\r\n    }\r\n    \r\n  }, [user_id]);\r\n\r\n  const placeOrder = (e) => {\r\n    e.preventDefault();\r\n    const orderArray = [];\r\n          for (let i = 0; i < cartList.length; i++) {\r\n            const order = {\r\n                userId: cartList[i].userId,\r\n                productId: cartList[i].productId,\r\n                quantity: cartList[i].quantity,\r\n            };\r\n            orderArray.push(order);\r\n          }\r\n    OrderService.addOrder(orderArray)\r\n      .then((response) => {\r\n         console.log(response.data);\r\n         for(let i=0; i<cartList.length; i++)\r\n         {\r\n          \r\n          console.log(cartList[i]);\r\n          getProduct(cartList[i].productId, cartList[i].quantity);\r\n          setProduct({...product,['quantity']:cartList[i].quantity});\r\n          console.log(\"Place Order prod\"+count, product);\r\n          deleteCart(e,cartList[i].id);\r\n         }\r\n         \r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getProduct = async (productId) =>{\r\n    try{\r\n      const response =await ProductService.getProductById(productId);\r\n      setProduct(response.data);\r\n      console.log(\"Get Product\"+count,response.data);\r\n      count++;\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n  const updateProduct = (product, productId) =>{\r\n    ProductService.updateProduct(product,productId)\r\n    .then((response) =>{\r\n      console.log(\"Product Updated\"+count , response.data);\r\n      count++;\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n  const deleteCart = (e,cartId) =>{\r\n    e.preventDefault();\r\n    CartService.deleteCart(cartId)\r\n    .then((response) =>{\r\n      if(cartList){\r\n        setcartList((preventElement) =>{\r\n          return preventElement.filter((cart) => cart.id != cartId);\r\n        })\r\n      }\r\n    }).catch((error) =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n    <NavigationBar/>\r\n   \r\n    <div className=\"table\">\r\n      <table id=\"productCartBody\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"firstItem\">Product Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!loading && (\r\n            <>\r\n              {cartList.map((cart) => (\r\n                <TableRow cart={cart} key={cart.id}  deleteCart={deleteCart}/>\r\n              ))}\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"orderBtnDiv\">\r\n        <button\r\n          onClick={(e) => placeOrder(e)}\r\n          className=\"orderBtn\"\r\n          id=\"placeOrderButton\"\r\n        >\r\n          Place Order\r\n        </button>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}