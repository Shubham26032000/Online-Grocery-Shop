{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Strafe\\\\strafe frontend\\\\src\\\\components\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport CartService from '../services/CartService';\nimport OrderService from '../services/OrderService';\nimport ProductService from '../services/ProductService';\nimport TableRow from '../uicomponent/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = _ref => {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const [cartList, setcartList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchList = userId => {\n      setLoading(true);\n      CartService.getCartByUserId(userId).then(response => {\n        setcartList(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      setLoading(false);\n    };\n\n    fetchList(userId);\n  }, []);\n  const [product, setProduct] = useState({});\n\n  const getProd = async id => {\n    try {\n      const response = await ProductService.getProductById(id);\n      setProduct(response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const placeOrder = async () => {\n    for (let i = 0; i < cartList.length; i++) {\n      try {\n        const response = await ProductService.getProductById(cartList[i].productId);\n        const order = {\n          userId: cartList[i].userId,\n          productId: cartList[i].productId,\n          quantity: cartList[i].quantity,\n          price: response.data.price * cartList[i].quantity\n        };\n        console.log(order);\n        OrderService.addOrder(order);\n      } catch (error) {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"productCartBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"firstItem\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: cartList.map(cart => /*#__PURE__*/_jsxDEV(TableRow, {\n            cart: cart\n          }, cart.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 27\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orderBtnDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => placeOrder(),\n        className: \"orderBtn\",\n        id: \"placeOrderButton\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"+PsRyGsR+xKzoqkUC77zP1LT1KQ=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","CartService","OrderService","ProductService","TableRow","Cart","userId","cartList","setcartList","loading","setLoading","fetchList","getCartByUserId","then","response","data","catch","error","console","log","product","setProduct","getProd","id","getProductById","placeOrder","i","length","productId","order","quantity","price","addOrder","map","cart"],"sources":["C:/Users/ADMIN/Desktop/Strafe/strafe frontend/src/components/Cart.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport CartService from '../services/CartService';\r\nimport OrderService from '../services/OrderService';\r\nimport ProductService from '../services/ProductService';\r\nimport TableRow from '../uicomponent/TableRow';\r\n\r\nconst Cart = ({userId}) => {\r\n\r\nconst [cartList, setcartList] = useState([]);\r\nconst [loading,setLoading] = useState(false);\r\n\r\nuseEffect(() => {\r\n    const fetchList = (userId) =>{\r\n        setLoading(true);\r\n        CartService.getCartByUserId(userId)\r\n        .then((response) =>{\r\n            setcartList(response.data);\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        })\r\n        setLoading(false);\r\n    }\r\n    fetchList(userId);\r\n}, [])\r\nconst [product, setProduct] = useState({});\r\nconst getProd =async (id) =>{\r\n    try{\r\n        const response = await ProductService.getProductById(id); \r\n        setProduct(response.data);\r\n        return response.data;\r\n    }catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n    \r\n}\r\n\r\nconst placeOrder = async ()=>{\r\n    for(let i=0; i<cartList.length; i++)\r\n    {\r\n        try{\r\n            const response = await ProductService.getProductById(cartList[i].productId);\r\n            const order = {\r\n                userId: cartList[i].userId,\r\n                productId:cartList[i].productId,\r\n                quantity:cartList[i].quantity,\r\n                price: (response.data.price*cartList[i].quantity)\r\n            }\r\n            console.log(order);\r\n\r\n            OrderService.addOrder(order);\r\n        }catch(error){\r\n\r\n        }\r\n       \r\n\r\n    }\r\n}\r\n  return (\r\n    <div className='table'>\r\n        <table id='productCartBody'>\r\n            <thead>\r\n                <tr >\r\n                <th className='firstItem'>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {!loading && (\r\n                    <>\r\n                        { \r\n                          cartList.map((cart) =>(\r\n                          <TableRow cart={cart} key={cart.id} />\r\n                          ))}\r\n                    </>\r\n                )}\r\n                \r\n            </tbody>\r\n\r\n        </table>\r\n        <div className='orderBtnDiv'>\r\n            <button  onClick={()=>placeOrder()}  className='orderBtn' id='placeOrderButton'>Place Order</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart"],"mappings":"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"},"metadata":{},"sourceType":"module"}